/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/led/led.h>

&spi1 {
	compatible = "nordic,nrf-spim";
	status = "okay";
	mosi-pin = <6>;
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <5>;
	miso-pin = <7>;

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "WS2812";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <11>; /* arbitrary; change at will */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
	};
};

/ {
	chosen {
		zmk,underglow = &led_strip;
	};
};

/ {
    keymap {
        compatible = "zmk,keymap";

// ----------------------------------------------      ----------------------------------------------
// | ESC  |  Q  |  W  |  E  |  R  |  T  |              |  Y  |  U  |  I  |  O  |  P  |     |  BKSP  |
// | TAB    |  A  |  S  |  D   |  F  |  G  |             |  H  |  J  |  K  |  L  |  '  |    ENTER   |
// | SHIFT     |  Z  |  X  |  C  |  V  |  B  |              |  N  |  M  |  ,  |  .  |  /  |   L2    |
// | LCTRL   | LALT| LGUI |   SPACE        |             |   SPACE/L1  | SAW |  RGUI  |  RALT  |RCTRL|
// -------------------------------------------        -----------------------------------------------

        default_layer {
            bindings = <
    &kp TAB   &kp Q    &kp W    &kp E &kp R     &kp T /**/ &kp Y &kp U &kp I     &kp O     &kp P    &kp BSPC  &kp BSPC
    &kp ESC   &kp A    &kp S    &kp D &kp F     &kp G /**/ &kp H &kp J &kp K     &kp L     &kp APOS &kp ENTER
    &kp LSHFT &kp Z    &kp X    &kp C &kp V     &kp B /**/ &kp N &kp M &kp COMMA &kp DOT   &kp UP   &mo 2
    &kp LCTRL &kp LALT &kp LGUI &none &lt 1 SPACE     /**/ &lt 1 SPACE &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS &kp LEFT  &kp DOWN  &kp RIGHT
            >;
        };


        symbols_layer {
            bindings = <
    &kp N1   &kp N2 &kp N3 &kp N4 &kp N5    &kp N6        /**/ &kp N7    &kp N8   &kp N9    &kp N0    &kp MINUS  &kp EQUAL  &kp GRAVE
    &kp CAPS &none  &none  &none  &none     &none         /**/ &none     &kp LBKT &kp RBKT  &kp BSLH  &kp SEMI   &trans
    &trans   &none  &none  &none  &kp DOWN  &kp C_VOL_DN  /**/ &none     &none    &none     &none     &kp SLASH  &trans
    &trans   &trans &trans &none  &trans                  /**/ &trans             &trans    &trans    &trans     &trans
            >;
        };


        fn_layer {
            bindings = <
    &kp F1 &kp F2          &kp F3          &kp F4          &kp F5       &kp F6       /**/ &kp F7     &kp F8     &kp F9    &kp F10    &kp F11      &kp F12    &none
    &trans &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3 &bt BT_SEL 4 /**/ &none      &none      &none     &none      &none        &bt BT_CLR
    &trans &rgb_ug RGB_TOG &rgb_ug RGB_BRI &rgb_ug RGB_BRD &none        &none        /**/ &bt BT_NXT &bt BT_CLR &none     &none      &kp C_VOL_UP &kp C_PP
    &trans &trans          &trans          &none           &trans                    /**/ &trans                &trans    &kp C_PREV &kp C_VOL_DN &kp C_NEXT
            >;
        };
    };
};
